blueprint:
  name: Brunnen Automation
  description: |
    Schaltet einen Brunnen basierend auf PV-Einspeisung, Außentemperatur und Abschaltverzögerung.
  domain: automation
  input:
    pv_sensor:
      name: PV Einspeiseleistung (Watt)
      selector:
        entity:
          domain: sensor
    temperature_sensor:
      name: Außentemperatursensor (°C)
      selector:
        entity:
          domain: sensor
    well_switch:
      name: Brunnen-Schalter
      selector:
        entity:
          domain: switch
    pv_threshold:
      name: Mindest-Einspeisewert (Watt)
      default: 100
      selector:
        number:
          min: 0
          max: 10000
          step: 50
    min_temperature:
      name: Mindesttemperatur zum Einschalten (°C)
      default: 2
      selector:
        number:
          min: 0
          max: 30
          step: 1
    delay_off:
      name: Verzögerung Abschaltung bei zu niedriger Einspeisung (Sekunden)
      default: 300
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: "s"
          step: 10

trigger:
  - platform: state
    entity_id: !input pv_sensor
  - platform: state
    entity_id: !input temperature_sensor
  - platform: time_pattern
    minutes: "/5"

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ (states(!input.pv_sensor) | float(0)) > (!input.pv_threshold | float(0)) and
                 (states(!input.temperature_sensor) | float(0)) > (!input.min_temperature | float(0)) }}
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input well_switch
      - conditions:
          - condition: template
            value_template: >
              {{ (states(!input.pv_sensor) | float(0)) <= (!input.pv_threshold | float(0)) }}
        sequence:
          - wait_for_trigger:
              - platform: template
                value_template: >
                  {{ (states(!input.pv_sensor) | float(0)) > (!input.pv_threshold | float(0)) }}
            timeout: !input delay_off
            continue_on_timeout: true
          - condition: template
            value_template: >
              {{ (states(!input.pv_sensor) | float(0)) <= (!input.pv_threshold | float(0)) }}
          - service: switch.turn_off
            target:
              entity_id: !input well_switch

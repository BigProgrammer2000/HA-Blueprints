blueprint:
  name: Person+Zone-Based Presence Automation
  description: >
    Schaltet basierend auf der Anwesenheit oder Abwesenheit einer Person Entitäten ein oder aus.
  domain: automation
  input:
    person_entity:
      name: Person Sensor
      description: Der Personen-Sensor, der überwacht werden soll (Erforderlich).
      selector:
        entity:
          domain: person
    zone_entity:
      name: Zonen Sensor
      description: Der Zonen-Sensor, der überwacht werden soll (Erforderlich).
      selector:
        entity:
          domain: zone
    home_settings:
      name: Anwesend
      icon: mdi:home-import-outline
      description: >
        Hier sind alle Einstellungen zur Anwesenheit zu finden.
      collapsed: false
      input:
        light_sensor:
          name: Licht Sensor
          description: Der Lichtsensor, der für die Helligkeitsüberprüfung verwendet wird (optional).
          selector:
            entity:
              domain: sensor
          default: ""
        brightness_threshold:
          name: Helligkeits-Schwellenwert
          description: Der Helligkeitswert, unter dem die Lichter eingeschaltet werden (optional).
          selector:
            number:
              min: 0
              max: 1000
              unit_of_measurement: "lx"
          default: 0
        entities_on_presence:
          name: Entitäten bei Anwesenheit einschalten
          description: Die Entitäten, die bei Anwesenheit eingeschaltet werden sollen (optional).
          selector:
            target:
              entity:
                domain:
                  - switch
                  - light
                  - media_player
          default: {}
        special_entities_on_presence:
          name: Entitäten bei Anwesenheit nach Helligkeit einschalten
          description: Die Entitäten, die bei Anwesenheit unter berücksichtigung der Helligkeit eingeschaltet werden sollen (optional).
          selector:
            target:
              entity:
                domain:
                  - switch
                  - light
                  - media_player
          default: {}
        custom_actions_on_presence:
          name: Custom Actions
          description: Hier kannst du Benutzerdefinierte Aktionen hinzufügen (optional).
          default: []
          selector:
            action: {}
    not_home_settings:
      name: Abwesend
      icon: mdi:home-export-outline
      description: >
        Hier sind alle Einstellungen zur Abwesenheit zu finden.
      collapsed: false
      input:
        entities_on_absence:
          name: Entitäten bei Abwesenheit ausschalten
          description: Die Entitäten, die bei Abwesenheit ausgeschaltet werden sollen (optional).
          selector:
            target:
              entity:
                domain:
                  - switch
                  - light
                  - media_player
          default: {}
        custom_actions_on_absence:
          name: Custom Actions
          description: Hier kannst du Benutzerdefinierte Aktionen hinzufügen (optional).
          default: []
          selector:
            action: {}

trigger:
  - platform: state
    entity_id: !input person_entity
    from: null
    to: null

variables:
  light_sensor: !input light_sensor
  zone_entity: !input zone_entity
  zone_state: "{{ states[zone_entity].name }}"
  brightness_threshold: !input brightness_threshold
  entities_on_presence: !input entities_on_presence
  special_entities_on_presence: !input special_entities_on_presence
  custom_actions_on_presence: !input custom_actions_on_presence
  entities_on_absence: !input entities_on_absence
  custom_actions_on_absence: !input custom_actions_on_absence

condition:
  condition: or
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == zone_state and trigger.from_state.state != zone_state }}"
      - condition: template
        value_template: "{{ trigger.from_state.state == zone_state and trigger.to_state.state != zone_state }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == zone_state and trigger.from_state.state != zone_state }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ entities_on_presence | length > 0 }}"
                sequence:
                  - service: homeassistant.turn_on
                    target: !input entities_on_presence
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ light_sensor and (states(light_sensor) | float < brightness_threshold) and special_entities_on_presence | length > 0 }}"
                sequence:
                  - service: homeassistant.turn_on
                    target: !input special_entities_on_presence
          - choose:
              - alias: Perform the custom actions
                conditions:
                - condition: template
                  value_template: "{{ custom_actions_on_presence | length > 0 }}"
                sequence: !input custom_actions_on_presence
      - conditions:
          - condition: template
            value_template: "{{ trigger.from_state.state == zone_state and trigger.to_state.state != zone_state }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ entities_on_absence | length > 0 }}"
                sequence:
                  - service: homeassistant.turn_off
                    target: !input entities_on_absence
          - choose:
              - alias: Perform the custom actions
                conditions:
                - condition: template
                  value_template: "{{ custom_actions_on_absence | length > 0 }}"
                sequence: !input custom_actions_on_absence

mode: single
